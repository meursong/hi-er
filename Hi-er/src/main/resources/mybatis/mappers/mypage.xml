<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mulcam.hier.dao.MypageDAO">
	<select id="queryOrders" resultType="Orders" parameterType="int">
	<![CDATA[
		select * from Orders where buyer_id=#{id}
		order by createdAt desc limit 5
	]]>	
	
	</select>
	
	<!-- 주문번호로 주문을 조회함 -->
	<select id="findorder" resultType="Orders" parameterType="int">
	<![CDATA[
		select * from Orders where order_id=#{order_id}
		limit 1
	]]>	
	
	</select>
	
	<!-- 리뷰를 삽입함-->
	<insert id="insertreview" parameterType="review">
	<![CDATA[
		insert into review 
		(review_wid,product_id,seller_id,content,star_point)
		values(#{review_wid},#{product_id},#{seller_id},#{content},#{star_point})
	]]>	
	
	</insert>
	
	
	
<!-- 	<select id="queryOrderss" resultType="Map" parameterType="int">
	<![CDATA[
		select * from Orders where buyer_id=#{id}
		order by createdAt desc limit 5
	]]>	
	</select> -->
	
	<!--거래관리 5개 출력-->
	<select id="queryOrdersss" resultType="Map" parameterType="int">
	<![CDATA[
		
		select @ROWNUM:=@ROWNUM+1 as ROWNUM,o.createdAt, u.nickname,p.title,us.nickname as nickname2,o.order_id,o.product_id
		from user u join user us join product p join orders o
		on p.product_id=o.product_id and u.user_id=#{id} and us.user_id=o.seller_id
		, (SELECT @rownum:=0) TMP
		order by o.createdAt desc limit 5
	]]>	
	
	</select>
	
	<!--찜한게시물 5개 출력-->
	<select id="queryLikepost" resultType="Map" parameterType="int">
	<![CDATA[
		select l.clicked_date, u.nickname,p.title,us.nickname as nickname2
		from user u join user us join product p join likepost l
		on p.product_id=l.product_id and u.user_id=#{id} and us.user_id=l.clicked_user
		order by l.clicked_date desc limit 5
	]]>	
	</select>
	
	<!--총 거래관리 게시글 갯수 출력-->
	<select id="countBoard" resultType="int" parameterType="int">
	<![CDATA[
		select count(*)
		from user u join user us join product p join orders o
		on p.product_id=o.product_id and u.user_id=#{id} and us.user_id=o.seller_id
	]]>	
	</select>
	
	<!--닉네임 중복검사-->
	<select id="queryNick" resultType="int" parameterType="String">
	<![CDATA[
		select count(*)
		from user
		where nickname=#{nick}
	]]>	
	</select>
	
	<!--닉네임 업데이트-->
	<update id="nickupdate" parameterType="user">
	<![CDATA[
		update user set nickname=#{nickname} where user_id=#{user_id}
	]]>	
	</update>
	
	
	<!--소개 업데이트-->
	<update id="introupdate" parameterType="freelancerUser">
	<![CDATA[
		update f_info set introduction=#{introduction} where f_id=#{f_id}
	]]>	
	</update>
	
	
	
	<!--주소 업데이트-->
	<update id="locationupdate" parameterType="freelancerUser">
	<![CDATA[
		update f_info set address=#{address},address2=#{address2} where f_id=#{f_id}
	]]>	
	</update>
	
	<select id="countBoard2" resultType="int" parameterType="int">
	<![CDATA[
		select count(*)
		from user u join user us join product p join likepost l
		on p.product_id=l.product_id and u.user_id=1 and us.user_id=l.clicked_user
	]]>	
	</select>
	
	<!--패스워드 파인드-->
	<select id="passfind" resultType="boolean" parameterType="user">
	<![CDATA[
		select count(*)
		from user
		where user_id=#{user_id} and password=#{password}
	]]>	
	</select>
	
	<!--패스워드 업데이트-->
	<update id="passupdate"  parameterType="user">
	<![CDATA[
		update user set password=#{password} where user_id=#{user_id}
	]]>	
	</update>

	<select id="selectBoardList111" resultType="Map" parameterType="int">
	<![CDATA[
		select @ROWNUM:=@ROWNUM+1 as ROWNUM,o.createdAt, u.nickname,p.title,us.nickname as nickname2
		from user u join user us join product p join orders o
		on p.product_id=o.product_id and u.user_id=#{id} and us.user_id=o.seller_id
		, (SELECT @rownum:=0) TMP
		where @ROWNUM between #{startrow} and #{startrow}+4
		order by o.createdAt desc limit 5
	]]>	
	</select>
	
	<!--거래내역 자세히 눌렀을때 리스트 가져옴-->
	<select id="selectBoardList" resultType="Map" parameterType="int">
	<![CDATA[
		select *
		from (select @ROWNUM:=@ROWNUM+1 as ROWNUM,t.createdAt,t.nickname,t.title,t.nickname2,t.order_id,t.product_id
				from((select o.createdAt, u.nickname,p.title,us.nickname as nickname2,o.order_id,p.product_id
					from user u join user us join product p join orders o 
		on p.product_id=o.product_id and u.user_id=1 and us.user_id=o.seller_id order by o.createdAt desc)t,(SELECT @rownum:=0) TMP))t
		where ROWNUM between #{startrow} and #{startrow}+4;    
	]]>	
	</select>
	
	
	<!--찜 자세히 눌렀을때 리스트 가져옴-->
	<select id="selectBoardList2" resultType="Map" parameterType="int">
	<![CDATA[
		select *
		from (select @ROWNUM:=@ROWNUM+1 as ROWNUM,t.clicked_date,t.nickname,t.title,t.nickname2
				from((select l.clicked_date, u.nickname,p.title,us.nickname as nickname2
					from user u join user us join product p join likepost l
		on p.product_id=l.product_id and u.user_id=1 and us.user_id=l.clicked_user order by l.clicked_date desc)t,(SELECT @rownum:=0) TMP))t
		where ROWNUM between #{startrow} and #{startrow}+4;    
	]]>	
	</select>
	
</mapper>